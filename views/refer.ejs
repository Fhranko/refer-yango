<!-- views/refer.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registrar Referido</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
  <!-- <butto%- include('partials/header') %> -->
  <%- include('partials/header') %>

    <main class="bg-light py-5 text-dark">
      <div class="container">
        <!-- Registrar Referido -->
        <div class="card shadow mb-5">
          <div class="card-body">
            <h1 class="card-title fs-4 mb-4">Registrar Referido</h1>
            <form id="referralForm">
              <div class="row g-3">
                <!-- Referidor -->
                <div class="col-md-5">
                  <label for="referer" class="form-label">Referidor:</label>
                  <select id="referer" name="refererId" class="form-select" required>
                    <option value="">Selecciona un conductor</option>
                    <% drivers.forEach(driver=> { %>
                      <option value="<%= driver.id %>">
                        <%= driver.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>

                <!-- Icono de flecha -->
                <div class="col-md-2 text-center d-flex align-items-center justify-content-center">
                  <span class="fs-4 text-secondary">&rarr;</span>
                </div>

                <!-- Referido -->
                <div class="col-md-5">
                  <label for="referred" class="form-label">Referido:</label>
                  <select id="referred" name="referredId" class="form-select" required>
                    <option value="">Selecciona un conductor</option>
                    <% drivers.forEach(driver=> { %>
                      <option value="<%= driver.id %>">
                        <%= driver.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>
              </div>

              <div class="d-grid gap-2 col-4 mx-auto mt-3">

                <button type="submit" class="btn btn-primary w-100">Registrar</button>
              </div>
            </form>
            <div id="message" class="mt-3 text-center"></div>
          </div>
        </div>

        <!-- Consultar Referidos -->
        <div class="card shadow">
          <div class="card-body">
            <h2 class="card-title fs-5 mb-4">Consultar Referidos</h2>

            <div class="mb-4">
              <div class="row">
                <div class="col-3">
                  <label for="driverDropdown" class="form-label">Conductor:</label>
                  <select id="driverDropdown" class="form-select mb-3">
                    <option value="" disabled selected>Seleccionar Conductor</option>
                    <% drivers.forEach(driver=> { %>
                      <option value="<%= driver.id %>">
                        <%= driver.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>
                <div class="col-3">
                  <label for="paid" class="form-label">Pagado:</label>
                  <select id="paid" class="form-select mb-3">
                    <option value="" disabled selected>Seleccionar</option>
                    <option value="true">
                      Si
                    </option>
                    <option value="false">
                      No
                    </option>
                  </select>
                </div>
                <div class="col-3">
                  <label for="start" class="form-label">Inicio:</label>
                  <input type="date" id="start" class="form-control mb-3" name="trip-start" min="2025-01-01"
                    max="2025-12-31">

                </div>
                <div class="col-3">
                  <label for="end" class="form-label">Fin:</label>
                  <input type="date" id="end" class="form-control mb-3" name="trip-end" min="2025-01-01"
                    max="2025-12-31">
                </div>
              </div>

              <div class="d-flex justify-content-end">
                <button id="download-button" class="btn btn-link">Descargar Excel</button>
              </div>

              <div class="d-grid gap-2 col-4 mx-auto mt-3">
                <button class="btn btn-primary w-100" onclick="fetchLevelReferrals()">Buscar</button>
              </div>

            </div>

            <table class="table table-bordered table-striped text-center">
              <thead class="table-light">
                <tr>
                  <th>ID</th>
                  <th>Referidor</th>
                  <th>Referido</th>
                  <th>Nivel</th>
                  <th>Monto</th>
                  <th>Fecha ref</th>
                  <th>Pagado</th>
                  <th>Acción</th>
                </tr>
              </thead>
              <tbody id="referralTableBody">
                <!-- Aquí se insertan las filas dinámicamente -->
              </tbody>
            </table>
          </div>
        </div>
      </div>


    </main>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
  const referralForm = document.getElementById('referralForm');

  referralForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    const referer_id = document.getElementById('referer').value;
    const referred_id = document.getElementById('referred').value;

    if (!referer_id || !referred_id) {
      document.getElementById('message').classList.add('text-danger');
      document.getElementById('message').textContent = 'Selecciona ambos conductores.';

      setTimeout(() => {
        document.getElementById('message').textContent = '';
      }, 3000);
      return;
    }

    try {
      const response = await fetch('/referrals/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ referer_id, referred_id })
      });

      const result = await response.json();

      if (result.status === 'success') {
        document.getElementById('message').classList.add('text-success');
        document.getElementById('message').textContent = result.message;
      } else {
        document.getElementById('message').classList.add('text-danger');
        document.getElementById('message').textContent = result.message;
      }

      setTimeout(() => {
        document.getElementById('message').textContent = '';
      }, 3000);
    } catch (error) {
      console.log("🚀 ~ referralForm.addEventListener ~ error:", error)
    }
  });

  async function fetchLevelReferrals() {
    const driverId = document.getElementById('driverDropdown').value;
    const startDate = document.getElementById('start').value;
    const endDate = document.getElementById('end').value;
    const paid = document.getElementById('paid').value;

    const tableBody = document.getElementById('referralTableBody');
    tableBody.innerHTML = '';


    const response = await fetch(`/referrals/report?refererId=${driverId}&startDate=${startDate}&endDate=${endDate}&paid=${paid}`);
    const referrals = await response.json();

    console.log(referrals)

    if (referrals && referrals.length > 0) {
      referrals.forEach(referral => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${referral.referred_id}</td>
          <td>${referral.referer.name}</td>
          <td>${referral.referred.name}</td>
          <td>${referral.level}</td>
          <td>${referral.amount}</td>
          <td>${referral.created_at}</td>
          <td>${referral.paid ? "Sí" : "No"}</td>
          <td>
            <button id="paid-btn-${referral.id}" class="btn btn-sm btn-success"
              onclick="markAsPaid(${referral.id})" ${referral.paid ? 'disabled' : ''}>
              ${referral.paid ? 'Pagado' : 'Pagar'}
            </button>
          </td>`;
        tableBody.appendChild(row);
      });
    } else {
      const row = document.createElement('tr');
      row.innerHTML = `<td colspan="8" class="text-center">No se encontraron registros.</td>`;
      tableBody.appendChild(row);

    }
  }

  async function markAsPaid(referralId) {
    try {
      const response = await fetch(`/referrals/update/${referralId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ paid: true }) // Mandamos el estado de pagado
      });

      const result = await response.json();
      console.log("🚀 ~ markAsPaid ~ result:", result)

      if (result.status === "success") {
        document.getElementById(`paid-btn-${referralId}`).textContent = 'Pagado';
        document.getElementById(`paid-btn-${referralId}`).disabled = true;
      }
    } catch (error) {
      console.error('Error al actualizar el estado de pago:', error);
    }
  }
</script>

<script>
  document.getElementById("download-button").addEventListener("click", async () => {
    // Parámetros dinámicos
    const driverId = document.getElementById('driverDropdown').value;
    const startDate = document.getElementById('start').value;
    const endDate = document.getElementById('end').value;
    const paid = document.getElementById('paid').value;

    // Construir la URL con parámetros
    const query = `?refererId=${driverId}&startDate=${startDate}&endDate=${endDate}&paid=${paid}`;
    const downloadUrl = `/referrals/excel-report${query}`;

    console.log(downloadUrl)

    try {
      const response = await fetch(downloadUrl);
      if (!response.ok) throw new Error("Error al descargar el archivo.");

      // Crear un enlace temporal para descargar el archivo
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "Reporte.xlsx"; // Nombre del archivo
      a.click();
      window.URL.revokeObjectURL(url);
    } catch (error) {
      console.error(error);
      alert("Ocurrió un error al descargar el archivo.");
    }
  });
</script>

</html>